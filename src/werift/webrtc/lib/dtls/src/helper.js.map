{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../../../dtls/src/helper.ts"],"names":[],"mappings":";;;AAAA,SAAgB,SAAS,CAAI,GAAQ;IACnC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC;AAFD,8BAEC;AAEM,KAAK,UAAU,KAAK,CAAC,EAAU;IACpC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,sBAEC;AAED,SAAgB,MAAM,CAAC,IAAY,EAAE,KAAa;IAChD,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,CAAC;AAHD,wBAGC","sourcesContent":["export function enumerate<T>(arr: T[]): [number, T][] {\n  return arr.map((v, i) => [i, v]);\n}\n\nexport async function sleep(ms: number) {\n  await new Promise((r) => setTimeout(r, ms));\n}\n\nexport function divide(from: string, split: string): [string, string] {\n  const arr = from.split(split);\n  return [arr[0], arr.slice(1).join(split)];\n}\n"]}