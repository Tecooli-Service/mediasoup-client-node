{"version":3,"file":"client.js","sourceRoot":"","sources":["../../../../dtls/src/client.ts"],"names":[],"mappings":";;;;AAAA,qDAAkD;AAClD,sFAAyF;AACzF,qDAAkD;AAClD,6CAAkD;AAClD,qDAAkD;AAElD,uDAAuD;AACvD,qCAA+C;AAC/C,0DAA0B;AAE1B,MAAM,GAAG,GAAG,eAAK,CAAC,oBAAoB,CAAC,CAAC;AAExC,MAAa,UAAW,SAAQ,mBAAU;IACxC,YAAY,OAAgB;QAC1B,KAAK,CAAC,OAAO,EAAE,sBAAW,CAAC,MAAM,CAAC,CAAC;QAU7B,qBAAgB,GAAG,CAAC,SAAgC,EAAE,EAAE;YAC9D,GAAG,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;YAEnC,KAAK,MAAM,SAAS,IAAI,SAAS,EAAE;gBACjC,QAAQ,SAAS,CAAC,QAAQ,EAAE;oBAC1B,KAAK,qBAAa,CAAC,oBAAoB;wBACrC;4BACE,MAAM,SAAS,GAAG,6CAAwB,CAAC,WAAW,CACpD,SAAS,CAAC,QAAQ,CACnB,CAAC;4BACF,IAAI,iBAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;yBACxD;wBACD,MAAM;oBACR,KAAK,qBAAa,CAAC,YAAY;wBAC7B;4BACE,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,CACxB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,CACV,CAAC;4BACF,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;yBACzC;wBACD,MAAM;oBACR,KAAK,qBAAa,CAAC,WAAW,CAAC;oBAC/B,KAAK,qBAAa,CAAC,mBAAmB,CAAC;oBACvC,KAAK,qBAAa,CAAC,mBAAmB;wBACpC;4BACE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;yBACzC;wBACD,MAAM;oBACR,KAAK,qBAAa,CAAC,iBAAiB;wBAClC;4BACE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;4BACxC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;yBACrB;wBACD,MAAM;oBACR,KAAK,qBAAa,CAAC,QAAQ;wBACzB;4BACE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;4BACrB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;4BACzB,GAAG,CAAC,gBAAgB,CAAC,CAAC;yBACvB;wBACD,MAAM;iBACT;aACF;QACH,CAAC,CAAC;QAvDA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAChD,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO;QACL,IAAI,iBAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5E,CAAC;CAkDF;AA3DD,gCA2DC","sourcesContent":["import { Flight1 } from \"./flight/client/flight1\";\nimport { ServerHelloVerifyRequest } from \"./handshake/message/server/helloVerifyRequest\";\nimport { Flight3 } from \"./flight/client/flight3\";\nimport { HandshakeType } from \"./handshake/const\";\nimport { Flight5 } from \"./flight/client/flight5\";\nimport { FragmentedHandshake } from \"./record/message/fragment\";\nimport { SessionType } from \"./cipher/suites/abstract\";\nimport { DtlsSocket, Options } from \"./socket\";\nimport debug from \"debug\";\n\nconst log = debug(\"werift/dtls/client\");\n\nexport class DtlsClient extends DtlsSocket {\n  constructor(options: Options) {\n    super(options, SessionType.CLIENT);\n    this.onHandleHandshakes = this.handleHandshakes;\n    log(\"start client\", options);\n  }\n\n  connect() {\n    new Flight1(this.transport, this.dtls, this.cipher).exec(this.extensions);\n  }\n\n  private flight5!: Flight5;\n  private handleHandshakes = (assembled: FragmentedHandshake[]) => {\n    log(\"handleHandshakes\", assembled);\n\n    for (const handshake of assembled) {\n      switch (handshake.msg_type) {\n        case HandshakeType.hello_verify_request:\n          {\n            const verifyReq = ServerHelloVerifyRequest.deSerialize(\n              handshake.fragment\n            );\n            new Flight3(this.transport, this.dtls).exec(verifyReq);\n          }\n          break;\n        case HandshakeType.server_hello:\n          {\n            this.flight5 = new Flight5(\n              this.transport,\n              this.dtls,\n              this.cipher,\n              this.srtp\n            );\n            this.flight5.handleHandshake(handshake);\n          }\n          break;\n        case HandshakeType.certificate:\n        case HandshakeType.server_key_exchange:\n        case HandshakeType.certificate_request:\n          {\n            this.flight5.handleHandshake(handshake);\n          }\n          break;\n        case HandshakeType.server_hello_done:\n          {\n            this.flight5.handleHandshake(handshake);\n            this.flight5.exec();\n          }\n          break;\n        case HandshakeType.finished:\n          {\n            this.dtls.flight = 7;\n            this.onConnect.execute();\n            log(\"dtls connected\");\n          }\n          break;\n      }\n    }\n  };\n}\n"]}