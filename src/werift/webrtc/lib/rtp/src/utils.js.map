{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../rtp/src/utils.ts"],"names":[],"mappings":";;;AAAA,MAAa,SAAS;IAGpB,YAAoB,SAAiB;QAAjB,cAAS,GAAT,SAAS,CAAQ;QAFrC,UAAK,GAAG,CAAC,CAAC;IAE8B,CAAC;IAEzC,GAAG,CAAC,IAAY,EAAE,UAAkB,EAAE,KAAa;QACjD,KAAK,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,UAAU,CAAC,CAAC;QAE5D,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAXD,8BAWC;AAED,SAAgB,MAAM,CAAC,IAAY,EAAE,UAAkB,EAAE,SAAiB,CAAC;IACzE,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;IACnD,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,UAAU,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9D,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,OAAO,CAAC,CAAC;AACX,CAAC;AAND,wBAMC","sourcesContent":["export class BitWriter {\n  value = 0;\n\n  constructor(private bitLength: number) {}\n\n  set(size: number, startIndex: number, value: number) {\n    value &= (1 << size) - 1;\n    this.value |= value << (this.bitLength - size - startIndex);\n\n    return this;\n  }\n}\n\nexport function getBit(bits: number, startIndex: number, length: number = 1) {\n  let bin = bits.toString(2).split(\"\");\n  bin = [...Array(8 - bin.length).fill(\"0\"), ...bin];\n  const s = bin.slice(startIndex, startIndex + length).join(\"\");\n  const v = parseInt(s, 2);\n  return v;\n}\n"]}