{"version":3,"file":"peerConnection.js","sourceRoot":"","sources":["../../../src/peerConnection.ts"],"names":[],"mappings":"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","sourcesContent":["import { isEqual, cloneDeep } from \"lodash\";\nimport Event from \"rx.mini\";\nimport * as uuid from \"uuid\";\nimport { enumerate, EventTarget } from \"./helper\";\nimport { ConnectionState, Kind, SignalingState } from \"./types/domain\";\nimport {\n  DISCARD_HOST,\n  DISCARD_PORT,\n  SenderDirections,\n  SRTP_PROFILE,\n} from \"./const\";\nimport { RTCDataChannel, RTCDataChannelParameters } from \"./dataChannel\";\nimport {\n  RTCRtpCodecParameters,\n  RTCRtpCodingParameters,\n  RTCRtpHeaderExtensionParameters,\n  RTCRtpParameters,\n  RTCRtpReceiveParameters,\n  RTCRtpSimulcastParameters,\n} from \"./media/parameters\";\nimport { RtpRouter } from \"./media/router\";\nimport { RTCRtpReceiver } from \"./media/rtpReceiver\";\nimport { RTCRtpSender } from \"./media/rtpSender\";\nimport {\n  Direction,\n  RTCRtpTransceiver,\n  TransceiverOptions,\n} from \"./media/rtpTransceiver\";\nimport {\n  addSDPHeader,\n  GroupDescription,\n  MediaDescription,\n  RTCSessionDescription,\n  SessionDescription,\n  SsrcDescription,\n} from \"./sdp\";\nimport {\n  RTCCertificate,\n  RTCDtlsParameters,\n  RTCDtlsTransport,\n} from \"./transport/dtls\";\nimport {\n  IceGathererState,\n  IceTransportState,\n  RTCIceCandidate,\n  RTCIceCandidateJSON,\n  RTCIceGatherer,\n  RTCIceParameters,\n  RTCIceTransport,\n} from \"./transport/ice\";\nimport { RTCSctpTransport } from \"./transport/sctp\";\nimport {\n  andDirection,\n  parseIceServers,\n  reverseDirection,\n  reverseSimulcastDirection,\n} from \"./utils\";\nimport debug from \"debug\";\nimport { MediaStreamTrack } from \"./media/track\";\n\nconst log = debug(\"werift/webrtc/peerConnection\");\n\nexport class RTCPeerConnection extends EventTarget {\n  readonly cname = uuid.v4();\n  iceTransport: RTCIceTransport;\n  dtlsTransport: RTCDtlsTransport;\n  sctpTransport?: RTCSctpTransport;\n  masterTransportEstablished = false;\n  configuration: Required<PeerConfig> = cloneDeep<PeerConfig>(\n    defaultPeerConfig\n  );\n  connectionState: ConnectionState = \"new\";\n  iceConnectionState: IceTransportState = \"new\";\n  iceGatheringState: IceGathererState = \"new\";\n  signalingState: SignalingState = \"stable\";\n  negotiationneeded = false;\n  readonly transceivers: RTCRtpTransceiver[] = [];\n  readonly iceGatheringStateChange = new Event<[IceGathererState]>();\n  readonly iceConnectionStateChange = new Event<[IceTransportState]>();\n  readonly signalingStateChange = new Event<[SignalingState]>();\n  readonly connectionStateChange = new Event<[ConnectionState]>();\n  readonly onDataChannel = new Event<[RTCDataChannel]>();\n  readonly onTransceiver = new Event<[RTCRtpTransceiver]>();\n  readonly onIceCandidate = new Event<[RTCIceCandidate]>();\n  readonly onnegotiationneeded = new Event<[]>();\n  ondatachannel?:\n    | ((event: { channel: RTCDataChannel }) => void)\n    | null = () => {};\n\n  private readonly router = new RtpRouter();\n  private readonly certificates: RTCCertificate[] = [];\n  private sctpRemotePort?: number;\n  private remoteDtls?: RTCDtlsParameters;\n  private remoteIce?: RTCIceParameters;\n  private seenMid = new Set<string>();\n  private currentLocalDescription?: SessionDescription;\n  private currentRemoteDescription?: SessionDescription;\n  private pendingLocalDescription?: SessionDescription;\n  private pendingRemoteDescription?: SessionDescription;\n  private isClosed = false;\n\n  constructor({\n    codecs,\n    headerExtensions,\n    iceServers,\n    iceTransportPolicy,\n  }: Partial<PeerConfig> = {}) {\n    super();\n\n    if (iceServers) this.configuration.iceServers = iceServers;\n    if (iceTransportPolicy)\n      this.configuration.iceTransportPolicy = iceTransportPolicy;\n    if (codecs?.audio) {\n      this.configuration.codecs.audio = codecs.audio;\n    }\n    if (codecs?.video) {\n      this.configuration.codecs.video = codecs.video;\n    }\n    [\n      ...(this.configuration.codecs.audio || []),\n      ...(this.configuration.codecs.video || []),\n    ].forEach((v, i) => {\n      v.payloadType = 96 + i;\n    });\n    if (headerExtensions?.audio) {\n      this.configuration.headerExtensions.audio = headerExtensions.audio;\n    }\n    if (headerExtensions?.video) {\n      this.configuration.headerExtensions.video = headerExtensions.video;\n    }\n    [\n      ...(this.configuration.headerExtensions.audio || []),\n      ...(this.configuration.headerExtensions.video || []),\n    ].forEach((v, i) => {\n      v.id = 1 + i;\n    });\n\n    this.iceConnectionStateChange.subscribe((state) => {\n      switch (state) {\n        case \"disconnected\":\n          this.setConnectionState(\"disconnected\");\n          break;\n        case \"closed\":\n          this.close();\n          break;\n      }\n    });\n\n    const { iceTransport, dtlsTransport } = this.createTransport([\n      SRTP_PROFILE.SRTP_AES128_CM_HMAC_SHA1_80,\n    ]);\n    this.iceTransport = iceTransport;\n    this.dtlsTransport = dtlsTransport;\n  }\n\n  get localDescription() {\n    if (!this._localDescription) return;\n    return this._localDescription.toJSON();\n  }\n\n  get remoteDescription() {\n    if (!this._remoteDescription) return;\n    return this._remoteDescription.toJSON();\n  }\n\n  private get _localDescription() {\n    return this.pendingLocalDescription || this.currentLocalDescription;\n  }\n\n  private get _remoteDescription() {\n    return this.pendingRemoteDescription || this.currentRemoteDescription;\n  }\n\n  private getTransceiverByMid(mid: string) {\n    return this.transceivers.find((transceiver) => transceiver.mid === mid);\n  }\n\n  private getTransceiverByMLineIndex(index: number) {\n    return this.transceivers.find(\n      (transceiver) => transceiver.mLineIndex === index\n    );\n  }\n\n  async createOffer() {\n    if (\n      (!this.sctpTransport && this.transceivers.length === 0) ||\n      !this.dtlsTransport\n    )\n      throw new Error(\n        \"Cannot create an offer with no media and no data channels\"\n      );\n\n    if (this.certificates.length === 0) {\n      await this.dtlsTransport.setupCertificate();\n    }\n\n    this.transceivers.forEach((transceiver) => {\n      transceiver.codecs = this.configuration.codecs[transceiver.kind];\n      transceiver.headerExtensions = this.configuration.headerExtensions[\n        transceiver.kind\n      ];\n    });\n\n    const description = new SessionDescription();\n    addSDPHeader(\"offer\", description);\n\n    // # handle existing transceivers / sctp\n\n    const currentMedia = this._localDescription\n      ? this._localDescription.media\n      : [];\n\n    currentMedia.forEach((m, i) => {\n      const mid = m.rtp.muxId;\n      if (!mid) {\n        log(\"mid missing\", m);\n        return;\n      }\n      if (m.kind === \"application\") {\n        description.media.push(\n          createMediaDescriptionForSctp(this.sctpTransport!, mid)\n        );\n      } else {\n        const transceiver = this.getTransceiverByMid(mid);\n        if (!transceiver) {\n          log(\"transceiver by mid not found\", mid);\n          return;\n        }\n        transceiver.mLineIndex = i;\n        description.media.push(\n          createMediaDescriptionForTransceiver(\n            transceiver,\n            this.cname,\n            transceiver.direction,\n            mid\n          )\n        );\n      }\n    });\n\n    // # handle new transceivers / sctp\n    this.transceivers\n      .filter((t) => !description.media.find((m) => m.rtp.muxId === t.mid))\n      .forEach((transceiver) => {\n        transceiver.mLineIndex = description.media.length;\n        description.media.push(\n          createMediaDescriptionForTransceiver(\n            transceiver,\n            this.cname,\n            transceiver.direction,\n            allocateMid(this.seenMid)\n          )\n        );\n      });\n\n    if (\n      this.sctpTransport &&\n      !description.media.find((m) => this.sctpTransport!.mid === m.rtp.muxId)\n    ) {\n      description.media.push(\n        createMediaDescriptionForSctp(\n          this.sctpTransport,\n          allocateMid(this.seenMid)\n        )\n      );\n    }\n\n    const mids = description.media\n      .map((m) => m.rtp.muxId)\n      .filter((v) => v) as string[];\n    const bundle = new GroupDescription(\"BUNDLE\", mids);\n    description.group.push(bundle);\n\n    return description.toJSON();\n  }\n\n  createDataChannel(\n    label: string,\n    options: Partial<{\n      maxPacketLifeTime?: number;\n      protocol: string;\n      maxRetransmits?: number;\n      ordered: boolean;\n      negotiated: boolean;\n      id?: number;\n    }> = {}\n  ): RTCDataChannel {\n    const base: typeof options = {\n      protocol: \"\",\n      ordered: true,\n      negotiated: false,\n    };\n    const settings: Required<typeof base> = { ...base, ...options } as any;\n\n    if (settings.maxPacketLifeTime && settings.maxRetransmits)\n      throw new Error(\"can not select both\");\n\n    if (!this.sctpTransport) {\n      this.sctpTransport = this.createSctpTransport();\n    }\n\n    const parameters = new RTCDataChannelParameters({\n      id: settings.id,\n      label,\n      maxPacketLifeTime: settings.maxPacketLifeTime,\n      maxRetransmits: settings.maxRetransmits,\n      negotiated: settings.negotiated,\n      ordered: settings.ordered,\n      protocol: settings.protocol,\n    });\n\n    return new RTCDataChannel(this.sctpTransport, parameters);\n  }\n\n  removeTrack(sender: RTCRtpSender) {\n    if (this.isClosed) throw new Error(\"peer closed\");\n    if (!this.getSenders().find(({ ssrc }) => sender.ssrc === ssrc))\n      throw new Error(\"unExist\");\n\n    const transceiver = this.transceivers.find(\n      ({ sender: { ssrc } }) => sender.ssrc === ssrc\n    );\n    if (!transceiver) throw new Error(\"unExist\");\n\n    sender.stop();\n\n    if (transceiver.currentDirection === \"recvonly\") {\n      this.needNegotiation();\n      return;\n    }\n\n    if (transceiver.direction === \"sendrecv\") {\n      transceiver.direction = \"recvonly\";\n    } else if (\n      transceiver.direction === \"sendonly\" ||\n      transceiver.direction === \"recvonly\"\n    ) {\n      transceiver.direction = \"inactive\";\n    }\n    this.needNegotiation();\n  }\n\n  private needNegotiation = () => {\n    this.negotiationneeded = true;\n    this.onnegotiationneeded.execute();\n  };\n\n  private createTransport(srtpProfiles: number[] = []) {\n    const iceGatherer = new RTCIceGatherer({\n      ...parseIceServers(this.configuration.iceServers),\n      forceTurn: this.configuration.iceTransportPolicy === \"relay\",\n    });\n    iceGatherer.onGatheringStateChange.subscribe((state) => {\n      this.updateIceGatheringState(state);\n    });\n    this.updateIceGatheringState(iceGatherer.gatheringState);\n    const iceTransport = new RTCIceTransport(iceGatherer);\n    iceTransport.onStateChange.subscribe((state) => {\n      this.updateIceConnectionState(state);\n    });\n    this.updateIceConnectionState(iceTransport.state);\n\n    iceTransport.iceGather.onIceCandidate = (candidate) => {\n      if (!this.localDescription) return;\n      const sdp = SessionDescription.parse(this.localDescription.sdp);\n      const media = sdp.media[0];\n      candidate.sdpMLineIndex = 0;\n      candidate.sdpMid = media.rtp.muxId;\n      // for chrome & firefox & maybe others\n      candidate.foundation = \"candidate:\" + candidate.foundation;\n\n      this.onIceCandidate.execute(candidate);\n      this.emit(\"icecandidate\", { candidate });\n    };\n\n    const dtlsTransport = new RTCDtlsTransport(\n      iceTransport,\n      this.router,\n      this.certificates,\n      srtpProfiles\n    );\n\n    return { dtlsTransport, iceTransport };\n  }\n\n  private createSctpTransport() {\n    const sctp = new RTCSctpTransport(this.dtlsTransport);\n    sctp.mid = undefined;\n\n    sctp.onDataChannel.subscribe((channel) => {\n      this.onDataChannel.execute(channel);\n      if (this.ondatachannel) {\n        this.ondatachannel({ channel });\n      }\n      this.emit(\"datachannel\", { channel });\n    });\n\n    return sctp;\n  }\n\n  async setLocalDescription(sessionDescription: RTCSessionDescription) {\n    const { dtlsTransport } = this;\n    if (!dtlsTransport) throw new Error(\"seems no media\");\n\n    // # parse and validate description\n    const description = SessionDescription.parse(sessionDescription.sdp);\n    description.type = sessionDescription.type;\n    this.validateDescription(description, true);\n\n    // # update signaling state\n    if (description.type === \"offer\") {\n      this.setSignalingState(\"have-local-offer\");\n    } else if (description.type === \"answer\") {\n      this.setSignalingState(\"stable\");\n    }\n\n    // # assign MID\n    description.media.forEach((media, i) => {\n      const mid = media.rtp.muxId;\n      if (!mid) {\n        log(\"mid missing\");\n        return;\n      }\n      this.seenMid.add(mid);\n      if ([\"audio\", \"video\"].includes(media.kind)) {\n        const transceiver = this.getTransceiverByMLineIndex(i);\n        if (transceiver) {\n          transceiver.mid = mid;\n        }\n      }\n      if (media.kind === \"application\" && this.sctpTransport) {\n        this.sctpTransport.mid = mid;\n      }\n    });\n\n    // # set ICE role\n    if (description.type === \"offer\") {\n      this.iceTransport.connection.iceControlling = true;\n    } else {\n      this.iceTransport.connection.iceControlling = false;\n    }\n    // One agent full, one lite:  The full agent MUST take the controlling role, and the lite agent MUST take the controlled role\n    // RFC 8445 S6.1.1\n    if (this.iceTransport.connection.remoteIsLite) {\n      this.iceTransport.connection.iceControlling = true;\n    }\n\n    // # set DTLS role for mediasoup\n    if (description.type === \"answer\") {\n      const role = description.media.find((media) => media.dtlsParams)\n        ?.dtlsParams?.role;\n      if (role) {\n        dtlsTransport.role = role;\n      }\n    }\n\n    // # configure direction\n    this.transceivers.forEach((t) => {\n      if ([\"answer\", \"pranswer\"].includes(description.type)) {\n        const direction = andDirection(t.direction, t.offerDirection);\n        t.currentDirection = direction;\n      }\n    });\n\n    // for trickle ice\n    this.setLocal(description);\n\n    // # gather candidates\n    await dtlsTransport.iceTransport.iceGather.gather();\n    description.media.map((media) => {\n      addTransportDescription(media, dtlsTransport);\n    });\n\n    this.setLocal(description);\n\n    // connect transports\n    if (description.type === \"answer\") {\n      this.connect().catch((err) => {\n        log(\"connect failed\", err);\n        this.setConnectionState(\"failed\");\n      });\n    }\n\n    return this.localDescription;\n  }\n\n  private setLocal(description: SessionDescription) {\n    if (description.type === \"answer\") {\n      this.currentLocalDescription = description;\n      this.pendingLocalDescription = undefined;\n    } else {\n      this.pendingLocalDescription = description;\n    }\n  }\n\n  async addIceCandidate(candidateMessage: RTCIceCandidateJSON) {\n    const candidate = RTCIceCandidate.fromJSON(candidateMessage);\n    await this.iceTransport.addRemoteCandidate(candidate);\n  }\n\n  private async connect() {\n    if (this.masterTransportEstablished || !this.dtlsTransport) return;\n\n    const dtlsTransport = this.dtlsTransport;\n    const iceTransport = dtlsTransport.iceTransport;\n\n    if (this.remoteIce && this.remoteDtls) {\n      this.setConnectionState(\"connecting\");\n\n      await iceTransport.start(this.remoteIce).catch((err) => {\n        log(\"iceTransport.start failed\", err);\n        throw err;\n      });\n      log(\"ice connected\");\n      await dtlsTransport.start(this.remoteDtls);\n\n      if (this.sctpTransport && this.sctpRemotePort) {\n        await this.sctpTransport.start(this.sctpRemotePort);\n        await this.sctpTransport.sctp.stateChanged.connected.asPromise();\n      }\n\n      this.masterTransportEstablished = true;\n      this.setConnectionState(\"connected\");\n    }\n  }\n\n  private localRtp(transceiver: RTCRtpTransceiver): RTCRtpParameters {\n    const rtp = new RTCRtpParameters({\n      muxId: transceiver.mid,\n      headerExtensions: transceiver.headerExtensions,\n      rtcp: { cname: this.cname, ssrc: transceiver.sender.ssrc, mux: true },\n    });\n    return rtp;\n  }\n\n  private remoteRtp(transceiver: RTCRtpTransceiver): RTCRtpReceiveParameters {\n    const media = this._remoteDescription!.media[transceiver.mLineIndex!];\n    const receiveParameters = new RTCRtpReceiveParameters({\n      codecs: transceiver.codecs,\n      muxId: media.rtp.muxId,\n      rtcp: media.rtp.rtcp,\n    });\n    const encodings = transceiver.codecs.map(\n      (codec) =>\n        new RTCRtpCodingParameters({\n          ssrc: media.ssrc[0]?.ssrc,\n          payloadType: codec.payloadType,\n        })\n    );\n    receiveParameters.encodings = encodings;\n    receiveParameters.headerExtensions = transceiver.headerExtensions;\n    return receiveParameters;\n  }\n\n  private validateDescription(\n    description: SessionDescription,\n    isLocal: boolean\n  ) {\n    if (isLocal) {\n      if (description.type === \"offer\") {\n        if (![\"stable\", \"have-local-offer\"].includes(this.signalingState))\n          throw new Error(\"Cannot handle offer in signaling state\");\n      } else if (description.type === \"answer\") {\n        if (\n          ![\"have-remote-offer\", \"have-local-pranswer\"].includes(\n            this.signalingState\n          )\n        ) {\n          throw new Error(\"Cannot handle answer in signaling state\");\n        }\n      }\n    } else {\n      if (description.type === \"offer\") {\n        if (![\"stable\", \"have-remote-offer\"].includes(this.signalingState)) {\n          throw new Error(\"Cannot handle offer in signaling state\");\n        }\n      } else if (description.type === \"answer\") {\n        if (\n          ![\"have-local-offer\", \"have-remote-pranswer\"].includes(\n            this.signalingState\n          )\n        ) {\n          throw new Error(\"Cannot handle answer in signaling state\");\n        }\n      }\n    }\n\n    description.media.forEach((media) => {\n      if (media.direction === \"inactive\") return;\n      if (\n        !media.iceParams ||\n        !media.iceParams.usernameFragment ||\n        !media.iceParams.password\n      )\n        throw new Error(\"ICE username fragment or password is missing\");\n    });\n\n    if ([\"answer\", \"pranswer\"].includes(description.type || \"\")) {\n      const offer = isLocal ? this._remoteDescription : this._localDescription;\n      if (!offer) throw new Error();\n\n      const offerMedia = offer.media.map((v) => [v.kind, v.rtp.muxId]);\n      const answerMedia = description.media.map((v) => [v.kind, v.rtp.muxId]);\n      if (!isEqual(offerMedia, answerMedia))\n        throw new Error(\"Media sections in answer do not match offer\");\n    }\n  }\n\n  async setRemoteDescription(sessionDescription: {\n    type: \"offer\" | \"answer\";\n    sdp: string;\n  }) {\n    // # parse and validate description\n    const description = SessionDescription.parse(sessionDescription.sdp);\n    description.type = sessionDescription.type;\n    this.validateDescription(description, false);\n\n    // # apply description\n    for (const [i, media] of enumerate(description.media)) {\n      if ([\"audio\", \"video\"].includes(media.kind)) {\n        const transceiver =\n          this.transceivers.find(\n            (t) =>\n              t.kind === media.kind &&\n              [undefined, media.rtp.muxId].includes(t.mid)\n          ) ||\n          (() => {\n            const transceiver = this.addTransceiver(media.kind, {\n              direction: \"recvonly\",\n            });\n            this.onTransceiver.execute(transceiver);\n            return transceiver;\n          })();\n\n        // simulcast\n        media.simulcastParameters.forEach((param) => {\n          this.router.registerRtpReceiverByRid(transceiver, param);\n        });\n\n        if (!transceiver.mid) {\n          transceiver.mid = media.rtp.muxId;\n          transceiver.mLineIndex = i;\n        }\n\n        // # negotiate codecs\n        log(\"remote codecs\", media.rtp.codecs);\n        transceiver.codecs = media.rtp.codecs.filter((remoteCodec) =>\n          (\n            this.configuration.codecs[media.kind as \"audio\" | \"video\"] || []\n          ).find(\n            (localCodec) =>\n              localCodec.mimeType.toLowerCase() ===\n              remoteCodec.mimeType.toLowerCase()\n          )\n        );\n        log(\"negotiated codecs\", transceiver.codecs);\n        if (transceiver.codecs.length === 0) {\n          throw new Error(\"negotiate codecs failed.\");\n        }\n        transceiver.headerExtensions = media.rtp.headerExtensions.filter(\n          (extension) =>\n            (\n              this.configuration.headerExtensions[\n                media.kind as \"video\" | \"audio\"\n              ] || []\n            ).find((v) => v.uri === extension.uri)\n        );\n        transceiver.receiver.setupTWCC(media.ssrc[0]?.ssrc);\n\n        // # configure direction\n        const direction = reverseDirection(media.direction || \"inactive\");\n        if ([\"answer\", \"pranswer\"].includes(description.type)) {\n          transceiver.currentDirection = direction;\n        } else {\n          transceiver.offerDirection = direction;\n        }\n      } else if (media.kind === \"application\") {\n        if (!this.sctpTransport) {\n          this.sctpTransport = this.createSctpTransport();\n        }\n\n        if (!this.sctpTransport.mid) {\n          this.sctpTransport.mid = media.rtp.muxId;\n        }\n\n        // # configure sctp\n        this.sctpRemotePort = media.sctpPort;\n      }\n      if (media.dtlsParams && media.iceParams) {\n        this.remoteDtls = media.dtlsParams;\n        this.remoteIce = media.iceParams;\n      }\n\n      // One agent full, one lite:  The full agent MUST take the controlling role, and the lite agent MUST take the controlled role\n      // RFC 8445 S6.1.1\n      if (media.iceParams?.iceLite) {\n        this.iceTransport.connection.iceControlling = true;\n      }\n\n      // # add ICE candidates\n      media.iceCandidates.forEach(this.iceTransport.addRemoteCandidate);\n\n      await this.iceTransport.iceGather.gather();\n\n      if (media.iceCandidatesComplete) {\n        await this.iceTransport.addRemoteCandidate(undefined);\n      }\n\n      // # set DTLS role\n      if (description.type === \"answer\" && media.dtlsParams?.role) {\n        this.dtlsTransport.role =\n          media.dtlsParams.role === \"client\" ? \"server\" : \"client\";\n      }\n    }\n\n    // connect transports\n    if (description.type === \"answer\") {\n      this.connect().catch((err) => {\n        log(\"connect failed\", err);\n        this.setConnectionState(\"failed\");\n      });\n    }\n\n    if (description.type === \"offer\") {\n      this.setSignalingState(\"have-remote-offer\");\n    } else if (description.type === \"answer\") {\n      this.setSignalingState(\"stable\");\n    }\n\n    if (description.type === \"answer\") {\n      this.currentRemoteDescription = description;\n      this.pendingRemoteDescription = undefined;\n    } else {\n      this.pendingRemoteDescription = description;\n    }\n\n    this.transceivers.forEach((transceiver) => {\n      transceiver.sender.parameters = this.localRtp(transceiver);\n\n      if ([\"recvonly\", \"sendrecv\"].includes(transceiver.direction)) {\n        const params = this.remoteRtp(transceiver);\n        this.router.registerRtpReceiverBySsrc(transceiver, params);\n      }\n    });\n  }\n\n  addTransceiver(\n    trackOrKind: Kind | MediaStreamTrack,\n    options: Partial<TransceiverOptions> = {}\n  ) {\n    const kind =\n      typeof trackOrKind === \"string\" ? trackOrKind : trackOrKind.kind;\n\n    const direction = options.direction || \"sendrecv\";\n\n    const sender = new RTCRtpSender(trackOrKind, this.dtlsTransport);\n    const receiver = new RTCRtpReceiver(kind, this.dtlsTransport, sender.ssrc);\n    const transceiver = new RTCRtpTransceiver(\n      kind,\n      receiver,\n      sender,\n      direction,\n      this.dtlsTransport\n    );\n    transceiver.options = options;\n    this.router.registerRtpSender(transceiver.sender);\n\n    this.transceivers.push(transceiver);\n\n    return transceiver;\n  }\n\n  getTransceivers() {\n    return this.transceivers;\n  }\n\n  getSenders() {\n    return this.getTransceivers().map((t) => t.sender);\n  }\n\n  getReceivers() {\n    return this.getTransceivers().map((t) => t.receiver);\n  }\n\n  addTrack(track: MediaStreamTrack) {\n    if (this.isClosed) throw new Error(\"is closed\");\n    if (this.getSenders().find((sender) => sender.track?.id === track.id))\n      throw new Error(\"track exist\");\n\n    const emptyTrackSender = this.transceivers.find(\n      (t) =>\n        t.sender.track == undefined &&\n        t.kind === track.kind &&\n        SenderDirections.includes(t.direction) === true\n    );\n    if (emptyTrackSender) {\n      const sender = emptyTrackSender.sender;\n      sender.registerTrack(track);\n      this.needNegotiation();\n      return sender;\n    }\n\n    const notSendTransceiver = this.transceivers.find(\n      (t) =>\n        t.sender.track == undefined &&\n        t.kind === track.kind &&\n        SenderDirections.includes(t.direction) === false &&\n        !t.usedForSender\n    );\n    if (notSendTransceiver) {\n      const sender = notSendTransceiver.sender;\n      sender.registerTrack(track);\n      switch (notSendTransceiver.direction) {\n        case \"recvonly\":\n          notSendTransceiver.direction = \"sendrecv\";\n          break;\n        case \"inactive\":\n          notSendTransceiver.direction = \"sendonly\";\n          break;\n      }\n      this.needNegotiation();\n      return sender;\n    } else {\n      const transceiver = this.addTransceiver(track, { direction: \"sendrecv\" });\n      this.needNegotiation();\n      return transceiver.sender;\n    }\n  }\n\n  async createAnswer() {\n    this.assertNotClosed();\n    if (\n      ![\"have-remote-offer\", \"have-local-pranswer\"].includes(\n        this.signalingState\n      ) ||\n      !this.dtlsTransport\n    )\n      throw new Error(\"createAnswer failed\");\n\n    if (this.certificates.length === 0) {\n      await this.dtlsTransport.setupCertificate();\n    }\n\n    const description = new SessionDescription();\n    addSDPHeader(\"answer\", description);\n\n    this._remoteDescription?.media.forEach((remoteM) => {\n      let dtlsTransport!: RTCDtlsTransport;\n      let media: MediaDescription;\n\n      if ([\"audio\", \"video\"].includes(remoteM.kind)) {\n        const transceiver = this.getTransceiverByMid(remoteM.rtp.muxId!)!;\n        media = createMediaDescriptionForTransceiver(\n          transceiver,\n          this.cname,\n          andDirection(transceiver.direction, transceiver.offerDirection),\n          transceiver.mid!\n        );\n        if (!transceiver.dtlsTransport) throw new Error();\n        dtlsTransport = transceiver.dtlsTransport;\n      } else if (remoteM.kind === \"application\") {\n        if (!this.sctpTransport || !this.sctpTransport.mid) throw new Error();\n        media = createMediaDescriptionForSctp(\n          this.sctpTransport,\n          this.sctpTransport.mid\n        );\n\n        dtlsTransport = this.sctpTransport.dtlsTransport;\n      } else throw new Error();\n\n      // # determine DTLS role, or preserve the currently configured role\n      if (!media.dtlsParams) throw new Error();\n      if (dtlsTransport.role === \"auto\") {\n        media.dtlsParams.role = \"client\";\n      } else {\n        media.dtlsParams.role = dtlsTransport.role;\n      }\n      media.simulcastParameters = remoteM.simulcastParameters.map((v) => ({\n        ...v,\n        direction: reverseSimulcastDirection(v.direction),\n      }));\n      description.media.push(media);\n    });\n\n    const bundle = new GroupDescription(\"BUNDLE\", []);\n    description.media.forEach((media) => {\n      bundle.items.push(media.rtp.muxId!);\n    });\n    description.group.push(bundle);\n\n    return description.toJSON();\n  }\n\n  async close() {\n    if (this.isClosed) return;\n\n    this.isClosed = true;\n    this.setSignalingState(\"closed\");\n    this.setConnectionState(\"closed\");\n\n    this.transceivers.forEach((transceiver) => {\n      transceiver.receiver.stop();\n      transceiver.sender.stop();\n    });\n\n    if (this.sctpTransport) {\n      await this.sctpTransport.stop();\n    }\n    if (this.dtlsTransport) {\n      await this.dtlsTransport.stop();\n      await this.dtlsTransport.iceTransport.stop();\n    }\n\n    this.dispose();\n    log(\"peerConnection closed\");\n  }\n\n  private assertNotClosed() {\n    if (this.isClosed) throw new Error(\"RTCPeerConnection is closed\");\n  }\n\n  private updateIceGatheringState(state: IceGathererState) {\n    log(\"iceGatheringStateChange\", state);\n    this.iceGatheringState = state;\n    this.iceGatheringStateChange.execute(state);\n    this.emit(\"icegatheringstatechange\", state);\n  }\n\n  private updateIceConnectionState(state: IceTransportState) {\n    log(\"iceConnectionStateChange\", state);\n    this.iceConnectionState = state;\n    this.iceConnectionStateChange.execute(state);\n    this.emit(\"iceconnectionstatechange\", state);\n  }\n\n  private setSignalingState(state: SignalingState) {\n    log(\"signalingStateChange\", state);\n    this.signalingState = state;\n    this.signalingStateChange.execute(state);\n  }\n\n  private setConnectionState(state: ConnectionState) {\n    log(\"connectionStateChange\", state);\n    this.connectionState = state;\n    this.connectionStateChange.execute(state);\n    this.emit(\"connectionstatechange\");\n  }\n\n  private dispose() {\n    this.onDataChannel.allUnsubscribe();\n    this.iceGatheringStateChange.allUnsubscribe();\n    this.iceConnectionStateChange.allUnsubscribe();\n    this.signalingStateChange.allUnsubscribe();\n    this.onTransceiver.allUnsubscribe();\n    this.onIceCandidate.allUnsubscribe();\n  }\n}\n\nexport function createMediaDescriptionForTransceiver(\n  transceiver: RTCRtpTransceiver,\n  cname: string,\n  direction: Direction,\n  mid: string\n) {\n  const media = new MediaDescription(\n    transceiver.kind,\n    9,\n    \"UDP/TLS/RTP/SAVPF\",\n    transceiver.codecs.map((c) => c.payloadType)\n  );\n  media.direction = direction;\n  media.msid = transceiver.msid;\n  media.rtp = new RTCRtpParameters({\n    codecs: transceiver.codecs,\n    headerExtensions: transceiver.headerExtensions,\n    muxId: mid,\n  });\n  media.rtcpHost = \"0.0.0.0\";\n  media.rtcpPort = 9;\n  media.rtcpMux = true;\n  media.ssrc = [new SsrcDescription({ ssrc: transceiver.sender.ssrc, cname })];\n\n  if (transceiver.options.simulcast) {\n    media.simulcastParameters = transceiver.options.simulcast.map(\n      (o) => new RTCRtpSimulcastParameters(o)\n    );\n  }\n\n  addTransportDescription(media, transceiver.dtlsTransport!);\n  return media;\n}\n\nexport function createMediaDescriptionForSctp(\n  sctp: RTCSctpTransport,\n  mid: string\n) {\n  const media = new MediaDescription(\n    \"application\",\n    DISCARD_PORT,\n    \"UDP/DTLS/SCTP\",\n    [\"webrtc-datachannel\"]\n  );\n  media.sctpPort = sctp.port;\n  media.rtp.muxId = mid;\n  media.sctpCapabilities = RTCSctpTransport.getCapabilities();\n\n  addTransportDescription(media, sctp.dtlsTransport);\n  return media;\n}\n\nexport function addTransportDescription(\n  media: MediaDescription,\n  dtlsTransport: RTCDtlsTransport\n) {\n  const iceTransport = dtlsTransport.iceTransport;\n  const iceGatherer = iceTransport.iceGather;\n\n  media.iceCandidates = iceGatherer.localCandidates;\n  media.iceCandidatesComplete = iceGatherer.gatheringState === \"complete\";\n  media.iceParams = iceGatherer.localParameters;\n  media.iceOptions = \"trickle\";\n\n  if (media.iceCandidates.length > 0) {\n    const candidate = media.iceCandidates[media.iceCandidates.length - 1];\n    media.host = candidate.ip;\n    media.port = candidate.port;\n  } else {\n    media.host = DISCARD_HOST;\n    media.port = DISCARD_PORT;\n  }\n\n  if (media.direction === \"inactive\") {\n    media.port = 0;\n  }\n\n  if (!media.dtlsParams) {\n    media.dtlsParams = dtlsTransport.localParameters;\n    if (!media.dtlsParams.fingerprints) {\n      media.dtlsParams.fingerprints =\n        dtlsTransport.localParameters.fingerprints;\n    }\n  }\n}\n\nexport function allocateMid(mids: Set<string>) {\n  let mid = \"\";\n  for (let i = 0; ; ) {\n    mid = (i++).toString();\n    if (!mids.has(mid)) break;\n  }\n  mids.add(mid);\n  return mid;\n}\n\nexport type PeerConfig = {\n  codecs: Partial<{\n    audio: RTCRtpCodecParameters[];\n    video: RTCRtpCodecParameters[];\n  }>;\n  headerExtensions: Partial<{\n    audio: RTCRtpHeaderExtensionParameters[];\n    video: RTCRtpHeaderExtensionParameters[];\n  }>;\n  iceTransportPolicy: \"all\" | \"relay\";\n  iceServers: IceServer[];\n};\n\nexport type IceServer = {\n  urls: string;\n  username?: string;\n  credential?: string;\n};\n\nexport const defaultPeerConfig: PeerConfig = {\n  codecs: {\n    audio: [\n      new RTCRtpCodecParameters({\n        mimeType: \"audio/opus\",\n        clockRate: 48000,\n        channels: 2,\n      }),\n      new RTCRtpCodecParameters({\n        mimeType: \"audio/PCMU\",\n        clockRate: 8000,\n        channels: 1,\n      }),\n    ],\n    video: [\n      new RTCRtpCodecParameters({\n        mimeType: \"video/VP8\",\n        clockRate: 90000,\n        rtcpFeedback: [\n          { type: \"ccm\", parameter: \"fir\" },\n          { type: \"nack\" },\n          { type: \"nack\", parameter: \"pli\" },\n          { type: \"goog-remb\" },\n        ],\n      }),\n    ],\n  },\n  headerExtensions: { audio: [], video: [] },\n  iceTransportPolicy: \"all\",\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\n"]}