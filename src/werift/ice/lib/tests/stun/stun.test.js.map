{"version":3,"file":"stun.test.js","sourceRoot":"","sources":["../../../tests/stun/stun.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { readMessage } from \"../utils\";\nimport { Transaction } from \"../../src/stun/transaction\";\nimport { Message, parseMessage } from \"../../src/stun/message\";\nimport { classes, methods } from \"../../src/stun/const\";\n\ndescribe(\"stun\", () => {\n  test(\"test_binding_request\", () => {\n    const data = readMessage(\"binding_request.bin\");\n    const message = parseMessage(data)!;\n\n    expect(message.messageMethod).toBe(methods.BINDING);\n    expect(message.messageClass).toBe(classes.REQUEST);\n    expect(message.transactionId).toEqual(Buffer.from(\"Nvfx3lU7FUBF\"));\n    expect(message.attributes).toEqual({});\n  });\n\n  test(\"test_binding_request_ice_controlled\", () => {\n    const data = readMessage(\"binding_request_ice_controlled.bin\");\n    const message = parseMessage(data)!;\n\n    expect(message.messageMethod).toBe(methods.BINDING);\n    expect(message.messageClass).toBe(classes.REQUEST);\n    expect(message.transactionId).toEqual(Buffer.from(\"wxaNbAdXjwG3\"));\n    expect(message.attributes).toEqual({\n      USERNAME: \"AYeZ:sw7YvCSbcVex3bhi\",\n      PRIORITY: 1685987071,\n      SOFTWARE: \"FreeSWITCH (-37-987c9b9 64bit)\",\n      \"ICE-CONTROLLED\": BigInt(\"5491930053772927353\"),\n      \"MESSAGE-INTEGRITY\": Buffer.from(\n        \"1963108a4f764015a66b3fea0b1883dfde1436c8\",\n        \"hex\"\n      ),\n      FINGERPRINT: 3230414530,\n    });\n  });\n\n  test(\"test_binding_request_ice_controlled_bad_fingerprint\", () => {\n    const data = Buffer.concat([\n      readMessage(\"binding_request_ice_controlled.bin\").slice(0, -1),\n      Buffer.from(\"z\"),\n    ]);\n    try {\n      parseMessage(data);\n    } catch (error) {\n      expect((error as Error).message).toBe(\n        \"STUN message fingerprint does not match\"\n      );\n    }\n  });\n\n  test(\"test_binding_request_ice_controlled_bad_integrity\", () => {\n    const data = readMessage(\"binding_request_ice_controlled.bin\");\n    try {\n      parseMessage(data, Buffer.from(\"bogus-key\"));\n    } catch (error) {\n      expect((error as Error).message).toBe(\n        \"STUN message integrity does not match\"\n      );\n    }\n  });\n\n  test(\"test_binding_request_ice_controlling\", () => {\n    const data = readMessage(\"binding_request_ice_controlling.bin\");\n    const message = parseMessage(data)!;\n\n    expect(message.messageMethod).toBe(methods.BINDING);\n    expect(message.messageClass).toBe(classes.REQUEST);\n    expect(message.transactionId).toEqual(Buffer.from(\"JEwwUxjLWaa2\"));\n    expect(message.attributes).toEqual({\n      USERNAME: \"sw7YvCSbcVex3bhi:AYeZ\",\n      \"ICE-CONTROLLING\": BigInt(\"5943294521425135761\"),\n      \"USE-CANDIDATE\": null,\n      PRIORITY: 1853759231,\n      \"MESSAGE-INTEGRITY\": Buffer.from(\n        \"c87b58eccbacdbc075d497ad0c965a82937ab587\",\n        \"hex\"\n      ),\n      FINGERPRINT: 1347006354,\n    });\n  });\n\n  test(\"test_binding_response\", () => {\n    const data = readMessage(\"binding_response.bin\");\n    const message = parseMessage(data)!;\n\n    expect(message.messageMethod).toBe(methods.BINDING);\n    expect(message.messageClass).toBe(classes.RESPONSE);\n    expect(message.transactionId).toEqual(Buffer.from(\"Nvfx3lU7FUBF\"));\n    expect(message.attributes).toEqual({\n      \"XOR-MAPPED-ADDRESS\": [\"80.200.136.90\", 53054],\n      \"MAPPED-ADDRESS\": [\"80.200.136.90\", 53054],\n      \"RESPONSE-ORIGIN\": [\"52.17.36.97\", 3478],\n      \"OTHER-ADDRESS\": [\"52.17.36.97\", 3479],\n      SOFTWARE: \"Citrix-3.2.4.5 'Marshal West'\",\n    });\n  });\n\n  test(\"test_message_body_length_mismatch\", () => {\n    const data = Buffer.concat([\n      readMessage(\"binding_response.bin\"),\n      Buffer.from(\"123\"),\n    ]);\n    try {\n      parseMessage(data);\n    } catch (error) {\n      expect((error as Error).message).toBe(\n        \"STUN message length does not match\"\n      );\n    }\n  });\n\n  test(\"test_message_shorter_than_header\", () => {\n    try {\n      parseMessage(Buffer.from(\"123\"));\n    } catch (error) {\n      expect((error as Error).message).toBe(\n        \"STUN message length is less than 20 bytes\"\n      );\n    }\n  });\n\n  test(\n    \"test_timeout\",\n    async () => {\n      const DummyProtocol: any = { sendStun: () => {} };\n      const request = new Message(methods.BINDING, classes.REQUEST);\n      const transaction = new Transaction(\n        request,\n        [\"127.0.0.1\", 1234],\n        DummyProtocol\n      );\n\n      try {\n        await transaction.run();\n      } catch (error) {\n        expect(error.str).toBe(\"STUN transaction timed out\");\n      }\n\n      const response = new Message(methods.BINDING, classes.RESPONSE);\n      transaction.responseReceived(response, [\"127.0.0.1\", 1234]);\n    },\n    60 * 1000\n  );\n\n  test(\"test_bytes\", () => {\n    const request = new Message(methods.BINDING, classes.REQUEST);\n    const bytes = request.bytes;\n    const message = parseMessage(bytes)!;\n    expect(request).toEqual(message);\n  });\n});\n"]}