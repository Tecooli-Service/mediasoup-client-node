{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../tests/utils.ts"],"names":[],"mappings":";;;;AAAA,mCAAyC;AACzC,2BAAkC;AAGlC,SAAgB,WAAW,CAAC,IAAY;IACtC,MAAM,IAAI,GAAG,iBAAY,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC;IAClD,OAAO,IAAI,CAAC;AACd,CAAC;AAHD,kCAGC;AAED,SAAsB,YAAY,CAAC,CAAa,EAAE,CAAa;;QAC7D,WAAW;QACX,MAAM,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC3B,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,eAAe,CAAC;QACvC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;QACnC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;QAEnC,WAAW;QACX,MAAM,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC3B,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,eAAe,CAAC;QACvC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;QACnC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;IACrC,CAAC;CAAA;AAZD,oCAYC;AAED,SAAgB,oBAAoB,CAAC,IAAgB,EAAE,QAAkB;IACvE,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACtD,wBAAe,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrD,CAAC;AAHD,oDAGC","sourcesContent":["import { deepStrictEqual } from \"assert\";\nimport { readFileSync } from \"fs\";\nimport { Connection } from \"../src/ice\";\n\nexport function readMessage(name: string) {\n  const data = readFileSync(\"./tests/data/\" + name);\n  return data;\n}\n\nexport async function inviteAccept(a: Connection, b: Connection) {\n  // # invite\n  await a.gatherCandidates();\n  b.remoteCandidates = a.localCandidates;\n  b.remoteUsername = a.localUserName;\n  b.remotePassword = a.localPassword;\n\n  // # accept\n  await b.gatherCandidates();\n  a.remoteCandidates = b.localCandidates;\n  a.remoteUsername = b.localUserName;\n  a.remotePassword = b.localPassword;\n}\n\nexport function assertCandidateTypes(conn: Connection, expected: string[]) {\n  const types = conn.localCandidates.map((v) => v.type);\n  deepStrictEqual(new Set(types), new Set(expected));\n}\n"]}